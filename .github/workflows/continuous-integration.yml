name: Continuous Integration
on:
  # branches pushed by collaborators
  push:
    branches:
      - main
  # pull request from non-collaborators
  pull_request: {}
  # nightly
  schedule:
    - cron:  '0 0 * * *'
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  lint-build:
    name: "Lint & Build"
    runs-on: ubuntu-latest
    steps:
      # checkout code
      - uses: actions/checkout@v2
      # install node
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Get cache directory
        id: get-cache-directory
        run: |
          yarn config get cacheFolder
          echo "::set-output name=path::$( yarn config get cacheFolder )"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.get-cache-directory.outputs.path }}
          key: yarn-cache-packaging-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-cache-packaging-
      # lint, build, test
      - run: yarn install --immutable
      - run: yarn lint
      - run: yarn build
      - name: Upload package artifact
        uses: actions/upload-artifact@v1
        with:
          name: ts-node-packed.tgz
          path: tests/ts-node-packed.tgz

  test:
    needs: lint-build
    name: "Test: ${{ matrix.os }}, node ${{ matrix.node }}, TS ${{ matrix.typescript }}"
    runs-on: ${{ matrix.os }}-latest
    env:
      TEST_MATRIX_NODE_VERSION: ${{ matrix.node }}
      TEST_MATRIX_TYPESCRIPT_VERSION: ${{ matrix.typescript }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
        # Don't forget to add all new flavors to this list!
        flavor: [6, 8, 9, 10, 11]
        include:
          # Node 16
          - flavor: 6
            node: 16
            nodeFlag: 16
            typescript: latest
            typescriptFlag: latest
          # - flavor: 7
          #   node: 16
          #   nodeFlag: 16
          #   typescript: 4.0
          #   typescriptFlag: 4_0
          - flavor: 8
            node: 16
            nodeFlag: 16
            typescript: next
            typescriptFlag: next
          # Node 18
          - flavor: 9
            node: 18
            nodeFlag: 18
            typescript: latest
            typescriptFlag: latest
          - flavor: 10
            node: 18
            nodeFlag: 18
            typescript: next
            typescriptFlag: next
          # Node nightly
          - flavor: 11
            node: 19-nightly
            nodeFlag: 19_nightly
            typescript: latest
            typescriptFlag: latest
    steps:
      # checkout code
      - uses: actions/checkout@v2
      # install node
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      # lint, build, test
      - name: Get cache directory
        id: get-cache-directory
        run: |
          yarn config get cacheFolder
          echo "::set-output name=path::$( yarn config get cacheFolder )"
      - name: Cache dependencies
        if: ${{ matrix.os != 'windows' }}
        uses: actions/cache@v2
        with:
          path: ${{ steps.get-cache-directory.outputs.path }}
          key: yarn-cache-${{ matrix.os }}-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-cache-${{matrix.os }}-
      - run: yarn install --immutable --mode=skip-build
      - name: Upload yarn logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v1
        with:
          name: yarn-logs
          path: yarn-error.log
      - run: yarn build-tsc
      - name: Download package artifact
        uses: actions/download-artifact@v1
        with:
          name: ts-node-packed.tgz
          path: tests/
      - run: yarn add -D typescript@${{ matrix.typescript }}
      - run: yarn test-cov
      - name: Upload yarn logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v1
        with:
          name: yarn-logs-${{ matrix.os }}-node-${{ matrix.nodeFlag }}-typescript-${{ matrix.typescriptFlag }}
          path: yarn-error.log
      - run: yarn coverage-report
        if: ${{ always() }}
      - name: Codecov
        if: ${{ always() }}
        uses: codecov/codecov-action@v1
        with:
          flags: ${{ matrix.os }},node_${{ matrix.nodeFlag }},typescript_${{ matrix.typescriptFlag }}
